[{"title":"Blog Introduction and My Story","author":"Alex Younger","date":"Wed Jun 23 2021 11:46:06 GMT-0400 (Eastern Daylight Time)","slug":"blog-introduction-and-my-story","id":"52QAV5d0yFhaAoiDpunDM","markdown":"# Preface\n\nAs an educator, one of the major aspects of my job is to regularly think about meta-learning, more specifically, the process by which higher levels of understanding are achieved. Each time I want to teach about a topic that requires my students to engage in higher-level thinking, I have to consider: \"How can I break this down into consumable \"chunks\" of more easy-to-understand ideas?\"\n\nSuch thinking has helped me to improve my teaching year after year as I tweak lesson plans to better serve the students in my class (as well as keep up with the ebbs and flows of modern youth culture).\n\nMy intention and hope is to bring these skills to the coding community, particularly [one I've grown quite fond of](https://www.theodinproject.com), so that others who are on this journey have another resource that just might lead to a few moments of enlightenment.  \n&nbsp;\n\n# My story\n\nI started learning Javascript in February of 2020. I have always been enamored with the idea of coding, but I didn't have the wherewithal to pursue my own education in it until I was 31 years old. It happened after having a heart-to-heart conversation with some students who were despairing at the idea of choosing a major in college.\n\nThere is a growing belief amongst the younger generation that when you are 18, you must choose a path that will be your specialized field for the rest of your life. Choose correctly, and your life will be full of bliss because your career will bring you unending joy every single day. Choose wrong, and you're bound for a life of misery, slogging through the work week performing tasks you hate just to make ends meet.\n\nIt was during my attempt to dispel this social construct that I confessed to my students that I'd always loved the idea of software engineering, and that just because I teach music at age 31 doesn't mean I'll never get to pursue that.  \n&nbsp;\n\n### **_And then my brain began to itch..._**\n\n&nbsp;  \nCould I actually do it, or was I just saying that to make my students, no, to make _myself_, feel better? I knew in my head that people switch careers all the time, and although I didn't intend to switch mine, I wondered if programming was something I always _thought_ I could do, or something I could _actually_ do. I decided I was going to find out for sure. And thus began my journey...  \n&nbsp;\n\n# My intro to coding\n\nJavascript is my first programming language, and other than being generally \"good with computers\" (I'm the guy my family members call when anything tech-related goes awry), I had virtually no preexisting knowledge-base to refer to. I couldn't tell you the difference between an array and an object, and I thought an argument was just what happened when you wanted Chinese and the wife wanted pizza. So as I learned more about data types, structures, object-oriented and functional-programming paradigms, etc, I had to build my own understanding from the ground up.\n\nI did have one advantage, however. At the time I started learning to code, I had been a public school teacher for 7 years. Of course, that kind of experience brings with it a certain understanding about the learning process and different tricks of the trade to learn things faster and more comprehensively. But I also found myself responding critically of some of the articles and lessons I was reading online. Several times I've had to remind myself that the people who are writing the bits I was reading were only trying to help, but I often found myself saying, \"a picture or diagram would make this so much easier to understand,\" or, \"in the first two sentences of this article I've encountered five words that have a technical meaning I am unaware of.\"\n\nSo down the rabbit hole I would continue, and while I don't feel like any of my time researching was necessarily wasted, sometimes I felt like my efforts to focus on learning one concept were extremely inefficient. It would often take hours just to figure out _how_ to read the very resources that were trying to teach me a concept that, by itself, was simpler than the terminology used to teach that very concept.\n&nbsp;\n\n### **So I'm going to try writing a blog.**\n\n&nbsp;  \nThis is my first attempt at a blog, or really writing anything with a semblance of consistency or permanence. I don't consider myself to be a great writer, but I'm hoping my ability to teach, explain, and provide differentiated examples will overcome that. My hope is to focus primarily on topics that ride the line between elementary, especially for those who have an intellectual predisposition toward computer science, and intermediate. I want to elaborate on ideas that I particularly struggled to understand as I began my journey, and hopefully my attempts to break them down into something more readily consumable will help others who are in the position I was in at the beginning of my journey.\n\n# Conclusion\n\n#### **It's probably poor taste to end an educational blog without _some_ take-home point, so...**\n\n## Keep moving forward\n\nEven despite my frustrations with not grasping several different concepts even weeks after my first attempt to learn them, **I can confidently say that some things just take time**. With enough of it, you too will eventually \"get it\" (whatever \"it\" is for you).\n\nSometimes the connections between what we currently know and what we are trying to learn are simply too thin to really comprehend the next idea we are trying to learn. But given enough time, those connections will inevitably strengthen, and when we come back to those lessons we tried to learn earlier, we will wonder how we were ever confused to begin with.\n\nIt's the practice of a thing that makes us better at it, even more so than any particular course, lesson, or even teacher. So when I say \"keep moving forward\" - I mean just that. Keep coding.  \n&nbsp;\n\n### More reading:\n\n- Learning to code? Give [The Odin Project](https://www.theodinproject.com) a try. In my opinion, it's the best resource out there, and it has a great community of supporters and maintainers. Completely free!\n","homeDirectory":"/home/alex/projects/portfolio/src/data/blogs/intro","lastEdited":"Wed Jun 23 2021 13:18:29 GMT-0400 (Eastern Daylight Time)","mainImageUrl":"blog-introduction-and-my-story.jpg"}]